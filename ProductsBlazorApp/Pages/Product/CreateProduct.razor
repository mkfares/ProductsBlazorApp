@page "/Product/Add"

@inject CategoryService CatService
@inject ProductService ProdService

<h3>Add New Product</h3>

<EditForm Model="product" OnValidSubmit="AddProduct">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="name">Name</label>
        <InputText id="name" @bind-Value="product.Name" class="form-control" />
    </div>

    <div class="form-group">
        <label for="price">Price</label>
        <InputNumber id="price" @bind-Value="product.Price" class="form-control" />
    </div>

    <div class="form-group">
        <label for="quantity">Quantity</label>
        <InputNumber id="quantity" @bind-Value="product.Quantity" class="form-control" />
    </div>

    <div class="form-group">
        <label for="orderdate">Order Date</label>
        <InputDate id="orderdate" @bind-Value="product.OrderDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
    </div>

    @* Replace InputSelect with select, since it does not work - check it *@
    <div class="form-group">
        <label for="color">Color</label>
        <select @bind="product.Color" id="color" class="form-control">
            <option value="">Select a color ...</option>
            @foreach (var color in Enum.GetNames(typeof(Color)))
            {
                <option>@color</option>
            }
        </select>
    </div>

    <div class="form-group">
        <label for="category">Category</label>
        <InputSelect @bind-Value="categoryId" id="category" class="form-control">
            <option value="">Select a category ...</option>
            @foreach (var category in categories)
            {
                <option value=@category.CategoryId>@category.Name</option>
            }
        </InputSelect>
    </div>

    <div class="form-check">
        <InputCheckbox id="ischecked" @bind-Value="isChecked" class="form-check-input" />
        <label class="form-check-label" for="ischecked">Checked</label>
    </div>

    <div class="mt-2"></div>

    <button type="submit" class="btn btn-primary">Add Product</button>
    <a href="Product/List" class="btn btn-info">Cancel</a>
</EditForm>

@code {
    Product product = new Product();

    // Needed for the category dropdown list 
    private List<Category> categories = new List<Category>();

    // Added because Inputcheckbox does not accept nullable variables
    private bool isChecked = false;

    // Check why product.categoryId does not bind
    private string categoryId = String.Empty;

    // Execute when component starts / initializes
    protected override void OnInitialized()
    {
        categories = CatService.GetCategories();
    }

    private void AddProduct()
    {
        // Update the product properties
        product.IsChecked = isChecked;

        // Convert categoryId from string to int
        if(!String.IsNullOrEmpty(categoryId))
        {
            product.CategoryId = Int32.Parse(categoryId);
        }
        
        ProdService.AddProduct(product);

        // To empty the form, find more elegant why
        product = new Product();

        // May navigate to the Product/List component 
        //@inject NavigationManager NavigationManager
        // NavigationManaget.NavigateTo("Product/List")
    }
}